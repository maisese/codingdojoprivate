{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to Mai's Restful API Assignment {{ title }} - Continued!!\\n  </h1>\\n  \\n</div>\\n\\n<div class=\\\"container center\\\"> \\n\\n  <h1>All the Tasks</h1> \\n\\n    <p align=\\\"center\\\" *ngFor=\\\"let task of tasks.tasks\\\">Title: {{task.title}} | Description {{task.description}}</p>\\n    <hr>\\n\\n  <h1>Below is the Latest Task</h1> \\n  <h3>Title: {{lastTask.title}} | Description {{lastTask.description}}</h3>\\n\\n<!-- <table class=\\\"table tablecenter\\\">\\n  <thead>\\n    <tr class=\\\"center\\\">\\n      <th scope=\\\"col\\\">Task Title</th>\\n      <th scope=\\\"col\\\">Description</th>\\n   </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let task of tasks.tasks\\\">\\n      <th scope=\\\"row\\\"></th>\\n      <td>{{task.title}}</td>\\n      <td>{{task.description}}</td>\\n    </tr>\\n  </tbody>\\n</table>\\n\\n<hr>\\n<h2> Test Form </h2>\\n<form action>\\n</form> -->\\n\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { HttpService } from './http.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'app';\n  //variables\n  tasks: any; //set the capture right here\n  editTaskid: any;\n  lastTask:any;\n  //\n  constructor(private _httpService: HttpService) { }\n  ngOnInit() {\n    //this is how the page is loaded\n    this.getalltasks();\n    // this.deleteTask();\n  };\n\n  getalltasks() {\n    console.log('in get task');\n    let tempObservable = this._httpService.getalltasks();\n    tempObservable.subscribe(\n      data => {\n        console.log(\"Got our tasks!\", data)\n        this.tasks = data;\n        // this.editTaskid = data[\"tasks\"][data['tasks'].length - 1][\"_id\"]\n        this.lastTask = data[\"tasks\"][data['tasks'].length - 1]\n      })\n  };\n\n  postTask() {\n    console.log('in post task');\n    let tempObservable = this._httpService.postTask({});\n    tempObservable.subscribe(data => console.log(\"Posting your task!\", data));\n  };\n\n  getEditTask() {\n    console.log('the get edit task');\n    let tempObservable = this._httpService.getEditTask({});\n    tempObservable.subscribe(data => console.log(\"Got your ONE task to edit!\", data));\n  };\n\n  putEditTask() {\n    console.log('in the put edit task');\n    let tempObservable = this._httpService.putEditTask({});\n    //go to postman, and place test object here, change order of operations on load. Go to NGonit, and put this route first.\n    tempObservable.subscribe(data => console.log(\"Updating your ONE task!\", data));\n  };\n\n  deleteTask() {\n    console.log('in the delete task');\n    let tempObservable = this._httpService.deleteTask({\n\n      _id: \"5c8d95cf2afbf736141374d8\",\n      title: \"go home and nap\",\n      description: \"probably for a while\",\n      completed: false,\n      createdAt: \"2019-03-17T00:33:19.197Z\",\n      updatedAt: \"2019-03-17T00:33:19.197Z\",\n      __v: 0\n\n    });\n    tempObservable.subscribe(data => console.log(\"Deleting this one task!\", data));\n  };\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\nimport { HttpService } from './http.service';\n\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n ],\n  bootstrap: [AppComponent],\n  providers: [HttpService],\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class HttpService {\n  constructor(private _http: HttpClient){\n  }\n\n  getalltasks(){\n    return this._http.get('/tasks')\n  }\n\n  postTask(obj){\n    return this._http.post('/task/new', obj)\n  }\n  //to pass data to the database, in angular, you will pass it an object, and you will use obj\n\n\n  getEditTask(obj){\n    return this._http.get('/task/edit/', obj)\n  }\n\n  putEditTask(obj){\n    return this._http.put('/task/'+obj[\"_id\"], obj)\n  }\n\n  deleteTask(obj){\n    return this._http.delete('/task/delete/'+obj[\"_id\"], obj)\n  }\n\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}